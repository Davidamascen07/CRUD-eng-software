AWSTemplateFormatVersion: '2010-09-09'
Description: 'Infraestrutura para aplicação CRUD com MySQL'

Parameters:
  ProjectName:
    Type: String
    Default: 'crud-app'
    Description: 'Nome do projeto para identificação dos recursos'

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: 'Nome do key pair para acesso SSH'
    Default: 'crud-app-key'

  InstanceType:
    Type: String
    Default: 't2.micro'
    Description: 'Tipo de instância EC2'

  DBInstanceClass:
    Type: String
    Default: 'db.t3.micro'
    Description: 'Classe de instância para o RDS'

  DBName:
    Type: String
    Default: 'crud_app'
    Description: 'Nome do banco de dados'

  DBUser:
    Type: String
    Default: 'crudadmin'
    Description: 'Nome de usuário para o banco de dados'

  DBPassword:
    Type: String
    NoEcho: true
    Default: 'ChangeMe123!'
    Description: 'Senha para o banco de dados'

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-vpc'

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-igw'

  # Attach Internet Gateway
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Public Subnet
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.1.0/24'
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-public-subnet'

  # Private Subnet
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.2.0/24'
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-private-subnet'

  # Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-public-rt'

  # Default Route
  DefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  # Route Table Association
  PublicRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  # Security Group for App
  AppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${ProjectName}-app-sg'
      GroupDescription: 'Security group para a aplicação CRUD'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: '0.0.0.0/0'
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-app-sg'

  # Security Group for RDS
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${ProjectName}-db-sg'
      GroupDescription: 'Security group para o banco de dados RDS'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref AppSecurityGroup
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-db-sg'

  # DB Subnet Group
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub '${ProjectName}-db-subnet-group'
      DBSubnetGroupDescription: 'DB Subnet Group para o RDS'
      SubnetIds:
        - !Ref PublicSubnet
        - !Ref PrivateSubnet
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-db-subnet-group'

  # EC2 Instance
  AppServer:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      ImageId: !Ref AmazonLinuxAMI
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - !Ref AppSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y git nodejs npm
          echo "NODE_ENV=production" >> /etc/environment
          echo "DB_HOST=${RDSInstance.Endpoint.Address}" >> /etc/environment
          echo "DB_USER=${DBUser}" >> /etc/environment
          echo "DB_PASSWORD=${DBPassword}" >> /etc/environment
          echo "DB_NAME=${DBName}" >> /etc/environment
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-app-server'

  # Elastic IP
  AppEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      InstanceId: !Ref AppServer
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-app-eip'

  # RDS MySQL Instance
  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: '20'
      DBInstanceClass: !Ref DBInstanceClass
      Engine: 'mysql'
      EngineVersion: '8.0'
      DBName: !Ref DBName
      MasterUsername: !Ref DBUser
      MasterUserPassword: !Ref DBPassword
      DBSubnetGroupName: !Ref DBSubnetGroup
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-mysql'

  # Latest Amazon Linux AMI
  AmazonLinuxAMI:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

Outputs:
  AppServerPublicIP:
    Description: 'O endereço IP público da instância EC2'
    Value: !Ref AppEIP

  RDSEndpoint:
    Description: 'O endpoint de conexão da instância RDS'
    Value: !GetAtt RDSInstance.Endpoint.Address
